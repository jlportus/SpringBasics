# Paquetes de escaneo
es.mde.paquete-base=es.mde.SpringBasics
es.mde.paquete-entidades=es.mde.SpringBasics.entidades

# # Configuracion del Logging

# 	## Nivel de Logging
	
# ### Me mostrara tododesde la raiz que sea mensaje warning o mas
# #logging.level.root=WARN 

# ### Me mostrara todo desde el paquete indicado que sea mensaje debug o mas
# logging.level.es.mde.SprinBasics=INFO 

#  	## Patron de salida de mensajes
 	
# ### Me mostrara las fechas con ese formato
# logging.pattern.dateformat=yyyy-MM-dd HH:mm 

# ### creo una variable para el formato
# mde.formatofecha=%date{ddMMM HH:mm:ss, UTC}Z
# ### aplico el formato con un placeHolder y mas propiedades
# logging.pattern.console=${mde.formatofecha} [%thread %clr(${PID:- })] %-5level %logger{15} => %msg %n 

# 	## Formato de Color de salida de mensajes
	
# ### aplico el formato con un placeHolder y mas propiedades
# logging.pattern.console=${mde.formatofecha} [%thread %clr(${PID:- })] %highlight(%-5level) %cyan(%logger{15}) => %msg %n

#  ## Salida de mensajes a fichero
# logging.file.name=archivo.log

# Configuracion de acceso a BD
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
	## Tengo que poner la ruta a la BD - en este caso a localhost
spring.datasource.url=jdbc:h2:tcp://localhost/~/test

	## Puerto para poder comunicarse en local con la BD H2 
	## A veces da pega con el Tomcat porque dice que esta ocupado
#server.port = 8081

# Configuracion de Hibernate

hibernate.dialect=org.hibernate.dialect.H2Dialect

	##Esto ya esta implementado en el jpa-config.xml
#hibernate.show_sql=true
#hibernate.hbm2ddl.auto=update
#hibernate.enable_lazy_load_no_trans=true

# Configuracion para REST
spring.data.rest.basePath=/api
spring.data.rest.detection-strategy=annotated
